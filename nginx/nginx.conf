# nginx innerhalb Docker Compose

# Map for conditional WebSocket upgrade
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream backend {
    server backend:8489 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream frontend {
    server frontend:80 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

server {
    listen 80;
    server_name localhost;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Client max body size
    client_max_body_size 10M;

    # API Proxy
    location /api/ {
        proxy_pass http://backend/api/;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts (erhöht für größere Tutorial-Inhalte)
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # WebSocket support only when needed (conditional based on Upgrade header)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Frontend Proxy
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
