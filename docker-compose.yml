services:
  # Rust Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: linux-tutorial-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=sqlite:/data/database.db
      - JWT_SECRET=${JWT_SECRET:?JWT_SECRET must be set in environment}
      - RUST_LOG=${RUST_LOG:-info}
      - PORT=8489
      - ADMIN_USERNAME=${ADMIN_USERNAME:?ADMIN_USERNAME must be set in environment}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:?ADMIN_PASSWORD must be set in environment}
    volumes:
      - backend-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8489/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: linux-tutorial-frontend
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - backend

  # nginx Reverse Proxy (innerhalb Docker)
  nginx:
    image: nginx:alpine
    container_name: linux-tutorial-nginx
    restart: unless-stopped
    ports:
      - "8489:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx-logs:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  backend-data:
    driver: local
  nginx-logs:
    driver: local
